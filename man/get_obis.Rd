% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_obis.R
\name{get_obis}
\alias{get_obis}
\title{Get data using \code{robis::occurrence()}}
\usage{
get_obis(
  aoi = NULL,
  save_dir = NULL,
  get_new = FALSE,
  name = "obis",
  data_map = NULL,
  filter_inconsistent = TRUE,
  removes = list(basisOfRecord = c("LIVING_SPECIMEN", "FOSSIL_SPECIMEN",
    "MATERIAL_CITATION")),
  ...
)
}
\arguments{
\item{aoi}{Optional simple feature (sf). Used to limit the occurrences
returned via \code{obis::occurence()}}

\item{save_dir}{Character. Path to directory into which to save outputs. If
\code{NULL} results will be saved to \code{here::here("out", "ds", "obis")}. File will
be named \code{obis.parquet}}

\item{get_new}{Logical. If FALSE, will attempt to load from existing
\code{save_dir}.}

\item{name}{Character. \code{data_name} value in \code{envImport::data_map}
(or other \code{data_map})}

\item{data_map}{Dataframe or NULL. Mapping of fields to retrieve. See example
\code{envImport::data_map}}

\item{filter_inconsistent}{Logical. If \code{TRUE}, inconsistencies between the
\code{occurrenceStatus} column and either \code{organismQuantity} or \code{individualCount}
are removed. e.g. a record with \code{occurrenceStatus == "ABSENT"} but
\code{individualCount == 1} would be filtered.}

\item{removes}{Named list. Names need to match column names in the result of
a call to \code{robis::occurrence()} (i.e. generally
\href{https://dwc.tdwg.org/}{Darwin core} column names). Levels within each name
are matched and, if present, removed. Note that this filtering occurs \emph{after}
download so it does not save on download time and can also be done after a
call to \code{get_obis()}. It does enable filtering on columns that are not passed
through to the return value as they are not in the \code{data_map}.}

\item{...}{Passed to \code{envImport::file_prep()}}
}
\value{
Dataframe of occurrences and file saved to \code{save_dir}.
}
\description{
Requires an aoi. i.e. aoi is not optional for this implementation of get_obis
}
\examples{

aoi <- sf::st_read(file.path(system.file(package = "envImport"), "aoi.shp"))

obis_data <- get_obis(aoi
                      , save_dir = tempdir()
                      , data_map = envImport::data_map
                      , get_new = TRUE
                      )

obis_data |>
  dplyr::count()

# Removing certain methods
obis_data <- get_obis(aoi
                      , save_dir = tempdir()
                      , data_map = envImport::data_map
                      , removes = list(basisOfRecord = c("PreservedSpecimen"))
                      , get_new = TRUE
                      )

obis_data |>
  dplyr::count()
}
